{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./config.js","webpack:///./pages/index.jsx","webpack:///./serverapi_ajax.js","webpack:///./serverapi_localstorage.js","webpack:///./store.js","webpack:///external \"axios\"","webpack:///external \"mobx\"","webpack:///external \"mobx-react\"","webpack:///external \"next/link\"","webpack:///external \"react\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","\n/* App configuration.\n *\n * Currently only selects between AJAX and localstorage API class.\n */\n\nconst IS_API_LOCALSTORAGE = false;\n\n\nimport api_ajax from \"./serverapi_ajax\";\nimport api_local from \"./serverapi_localstorage\";\n\nlet api = null;\n\nif (IS_API_LOCALSTORAGE) {\n    api = api_local;\n} else {\n    api = api_ajax;\n}\n\nexport default api;\n\n","/* The home page.\n *\n * Loads and displays the movie list.\n */\n\nimport React from \"react\";\nimport { observer } from \"mobx-react\";\n\nimport Link from \"next/link\";\n\nimport store from \"../store\";\nimport api from \"../config\";\n\nclass About extends React.Component {\n  componentDidMount() {\n    console.info(\"index did mount\");\n    // query movies and put into store, whenever this page gets activated\n    // api.getDashboard()\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <h2>List of movies</h2>\n\n        <ol>\n          {store.movielist.map((movie) => (\n            <li key={movie.id}>\n              <Link href={\"/moviedetails?id=\" + movie.id}>\n                <a>{movie.title}</a>\n              </Link>\n              by {movie.director || \"Unknown\"}\n            </li>\n          ))}\n        </ol>\n\n        <Link href=\"/movieedit\">\n          <a className=\"but\">Add a new movie</a>\n        </Link>\n      </React.Fragment>\n    );\n  }\n}\n\n// mark as mobx observer\nexport default observer(About);\n\n// debug in console\n//window.store = store;\n","/* ServerAPI talks REST with the backend server.\n *\n * All server communication takes place via this singleton module!\n *\n * Calls return promises.\n *\n * (Wish I could use async/await but browser support is still lacking.)\n *\n * My Python REST API server implements this simple movie API:\n * https://github.com/tomimick/restpie3\n */\n\nimport axios from \"axios\";\n\nconst URL_MOVIES = \"http://api-uat.nimbus.com.vn/v1\";\n\nclass ServerAPI {\n  constructor() {\n    this.client = axios.create({\n      withCredentials: true, // pass cookies to cross-site api\n    });\n  }\n\n  query_movies() {\n    let url = URL_MOVIES;\n    return this.client.get(url).then((reply) => {\n      return reply.data;\n    });\n    // have a cache here so the request would not always reach server\n  }\n\n  get_movie(id) {\n    let url = `${URL_MOVIES}${id}`;\n    return this.client.get(url).then((reply) => {\n      return reply.data;\n    });\n  }\n\n  save_movie(item) {\n    if (!item.id) {\n      // create\n      let url = URL_MOVIES;\n      return this.client.post(url, item);\n    } else {\n      // update\n      let url = `${URL_MOVIES}${item.id}`;\n      return this.client.put(url, item);\n    }\n  }\n\n  delete_movie(id) {\n    let url = `${URL_MOVIES}${id}`;\n    return this.client.delete(url);\n  }\n\n  getDashboard() {\n    let url = `${URL_MOVIES}`;\n    return this.client.get(url).then((data) => {\n      console.log(\"====================================\");\n      console.log(data);\n      console.log(\"====================================\");\n    });\n  }\n}\n\n// export singleton API\nconst api = new ServerAPI();\nexport default api;\n","\n/* ServerAPI mockup - backed by localStorage for demo purposes only.\n *\n * Not efficient for large data because of localStorage limitations.\n */\n\nimport axios from \"axios\"\n\nconst KEY = \"movies\";\n\n\nclass LocalStorageAPI {\n\n    constructor() {\n    }\n\n    query_movies() {\n        return new Promise((resolve, reject) => {\n\n            //localStorage.removeItem(\"movies\") // to remove all\n\n            var value = localStorage.getItem(KEY);\n\n            if (!value) {\n                // load initial data\n                let url = \"/static/exampledata/movies.json\";\n                axios.get(url)\n                    .then(reply => {\n                        localStorage.setItem(KEY, JSON.stringify(reply.data));\n                        resolve(reply.data);\n                    });\n            } else {\n                let data = JSON.parse(value);\n                resolve(data);\n            }\n        })\n    }\n\n    get_movie(id) {\n        return new Promise((resolve, reject) => {\n\n            id = parseInt(id);\n\n            var value = localStorage.getItem(KEY);\n            let data = JSON.parse(value) || [];\n\n            // search for id\n            for (const x of data) {\n                if (x.id == id) {\n                    resolve(x);\n                    return;\n                }\n            }\n\n            reject();\n        });\n    }\n\n    save_movie(item) {\n        return new Promise((resolve, reject) => {\n\n            var value = localStorage.getItem(KEY);\n            let moviearray = JSON.parse(value);\n\n            if (!item.id) {\n                // create object\n                const seconds = Math.floor(Date.now() / 1000);\n                item.id = seconds;\n                moviearray.push(item);\n            } else {\n                // edit object\n                for (const x of moviearray) {\n                    if (x.id == item.id) {\n                        x.title = item.title;\n                        x.director = item.director;\n                    }\n                }\n            }\n\n            localStorage.setItem(KEY, JSON.stringify(moviearray));\n            resolve(item);\n        })\n    }\n\n    delete_movie(id) {\n        return new Promise((resolve, reject) => {\n            id = parseInt(id);\n\n            var value = localStorage.getItem(KEY);\n            let moviearray = JSON.parse(value);\n\n            moviearray = moviearray.filter(item => item.id !== id)\n\n            localStorage.setItem(KEY, JSON.stringify(moviearray));\n            resolve();\n        })\n    }\n}\n\n// export singleton object\nconst api_mockup = new LocalStorageAPI();\nexport default api_mockup;\n\n","\n/*\n * Data store, managed by Mobx - https://mobx.js.org\n *\n * Currently just holds our list of movies.\n */\n\nimport { observable, computed, action, decorate } from \"mobx\";\nimport { onError } from \"mobx-react\"\n\n\nclass MyStore {\n\n    constructor() {\n        this.movielist = [];\n    }\n\n    // a property for count\n    get count() {\n        return this.movielist.length;\n    }\n\n    // replace the whole movielist\n    set_movies(array) {\n        this.movielist = array || [];\n    }\n\n    // add a single movie\n    add_movie(obj) {\n        this.movielist.push(obj);\n    }\n}\n\n// attach mobx to the store\n// (not using decorators since they require extra babel)\ndecorate(MyStore, {\n\n    // our data\n    movielist: observable,\n    count: computed,\n    // actions\n    set_movies: action,\n    add_movie: action\n});\n\n// log mobx errors\nonError(error => {\n    console.log(error)\n});\n\n// export singleton store\nconst store = new MyStore();\nexport default store;\n\n","module.exports = require(\"axios\");","module.exports = require(\"mobx\");","module.exports = require(\"mobx-react\");","module.exports = require(\"next/link\");","module.exports = require(\"react\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvFA;AAAA;AAAA;AAAA;;;;AAKA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;;;;AAKA;AACA;AAEA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AAEA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA5BA;AACA;AACA;AA8BA;AAGA;;;;;;;;;;;;;;;;;;;;;AChDA;;;;;;;;;;;AAYA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAGA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAGA;AACA;AACA;AADA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AClEA;;;;AAKA;AAEA;AACA;AAEA;AAEA;AAAA;AACA;AACA;;;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAEA;AAEA;AACA;AACA;AANA;AAAA;AACA;AADA;AAQA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AACA;AAcA;AACA;AACA;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;;;;AAGA;AACA;AACA;AADA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACpGA;;;;;AAMA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAKA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAZA;AACA;AACA;;;;AAaA;AACA;AACA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAUA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACpDA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}