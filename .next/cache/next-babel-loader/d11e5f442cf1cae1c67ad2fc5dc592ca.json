{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\n/* ServerAPI talks REST with the backend server.\n *\n * All server communication takes place via this singleton module!\n *\n * Calls return promises.\n *\n * (Wish I could use async/await but browser support is still lacking.)\n *\n * My Python REST API server implements this simple movie API:\n * https://github.com/tomimick/restpie3\n */\nimport axios from \"axios\";\nvar PUBLIC_URL = \"http://api-uat.nimbus.com.vn/v1\";\n\nvar ServerAPI = /*#__PURE__*/function () {\n  function ServerAPI() {\n    _classCallCheck(this, ServerAPI);\n\n    this.client = axios.create({\n      baseURL: PUBLIC_URL,\n      timeout: 20000,\n      headers: {\n        \"X-Custom-Header\": \"foobar\"\n      }\n    });\n  }\n\n  _createClass(ServerAPI, [{\n    key: \"getCategories\",\n    value: function getCategories() {\n      var url = \"\".concat(PUBLIC_URL, \"/categories\");\n      return this.client.get(url);\n    }\n  }, {\n    key: \"getFeatures\",\n    value: function getFeatures() {\n      var url = \"\".concat(PUBLIC_URL, \"/features\");\n      return this.client.get(url);\n    }\n  }, {\n    key: \"getSlug\",\n    value: function getSlug(slug) {\n      var url = \"\".concat(PUBLIC_URL, \"/\").concat(slug);\n      return this.client.get(url);\n    }\n  }]);\n\n  return ServerAPI;\n}(); // export singleton API\n\n\nvar api = new ServerAPI();\nexport default api;","map":{"version":3,"sources":["/Users/phamtien/Work/Nimbus/blog/service/serverapi_ajax.js"],"names":["axios","PUBLIC_URL","ServerAPI","client","create","baseURL","timeout","headers","url","get","slug","api"],"mappings":";;;AAAA;;;;;;;;;;;AAYA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,UAAU,GAAG,iCAAnB;;IAEMC,S;AACJ,uBAAc;AAAA;;AACZ,SAAKC,MAAL,GAAcH,KAAK,CAACI,MAAN,CAAa;AACzBC,MAAAA,OAAO,EAAEJ,UADgB;AAEzBK,MAAAA,OAAO,EAAE,KAFgB;AAGzBC,MAAAA,OAAO,EAAE;AAAE,2BAAmB;AAArB;AAHgB,KAAb,CAAd;AAKD;;;;oCAEe;AACd,UAAIC,GAAG,aAAMP,UAAN,gBAAP;AACA,aAAO,KAAKE,MAAL,CAAYM,GAAZ,CAAgBD,GAAhB,CAAP;AACD;;;kCAEa;AACZ,UAAIA,GAAG,aAAMP,UAAN,cAAP;AACA,aAAO,KAAKE,MAAL,CAAYM,GAAZ,CAAgBD,GAAhB,CAAP;AACD;;;4BAEOE,I,EAAM;AACZ,UAAIF,GAAG,aAAMP,UAAN,cAAoBS,IAApB,CAAP;AACA,aAAO,KAAKP,MAAL,CAAYM,GAAZ,CAAgBD,GAAhB,CAAP;AACD;;;;KAGH;;;AACA,IAAMG,GAAG,GAAG,IAAIT,SAAJ,EAAZ;AACA,eAAeS,GAAf","sourcesContent":["/* ServerAPI talks REST with the backend server.\n *\n * All server communication takes place via this singleton module!\n *\n * Calls return promises.\n *\n * (Wish I could use async/await but browser support is still lacking.)\n *\n * My Python REST API server implements this simple movie API:\n * https://github.com/tomimick/restpie3\n */\n\nimport axios from \"axios\";\n\nconst PUBLIC_URL = \"http://api-uat.nimbus.com.vn/v1\";\n\nclass ServerAPI {\n  constructor() {\n    this.client = axios.create({\n      baseURL: PUBLIC_URL,\n      timeout: 20000,\n      headers: { \"X-Custom-Header\": \"foobar\" },\n    });\n  }\n\n  getCategories() {\n    let url = `${PUBLIC_URL}/categories`;\n    return this.client.get(url);\n  }\n\n  getFeatures() {\n    let url = `${PUBLIC_URL}/features`;\n    return this.client.get(url);\n  }\n\n  getSlug(slug) {\n    let url = `${PUBLIC_URL}/${slug}`;\n    return this.client.get(url);\n  }\n}\n\n// export singleton API\nconst api = new ServerAPI();\nexport default api;\n"]},"metadata":{},"sourceType":"module"}